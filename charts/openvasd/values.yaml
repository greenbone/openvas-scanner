# Default values for openvasd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Is currently reqired by openvasd to control openvas
ospd:
  repository: registry.community.greenbone.net/community/ospd-openvas
  pullPolicy: Always
  tag: "edge"

# Contains openvasd
openvas:
  repository: registry.community.greenbone.net/community/openvas-scanner
  pullPolicy: Always
  tag: "edge"

# Configuration of openvasd
openvasd: 
  # Sets the log level and changes the verbosity of openvasd.
  # Can be set to TRACE, DEBUG, INFO, WARNING, ERROR
  # openvasd is provided by the openvas image
  loglevel: DEBUG
  # When set it will be the used API-KEY. It is not required when deploy_client is true.
  # apikey: changeme
  # can be either service: fill openvasd capabilities, service_notus: only notus
  mode: service
  # can be either:
  # - openvas, use openvas and redis 
  # - ospd, use ospd-openvas 
  scanner_type: openvas 
  # can be either:
  # - redis, when scanner_type is set to openvas it has to redis and this field is ignored
  # - in_memory, uses a in memory storage
  # - fs, uses a file system storage
  storage_type: redis
  tls:
    # enables the server-/client-certs deployment via secret 
    # server-key
    # client-certs
    # deplying a client certificate without a server certificate will not have any effect.
    certificates:
      deploy_server: true
      deploy_client: true


# NASL scripts also known as feed
vulnerabilitytests:
  # latest is the most current community feed.
  repository: registry.community.greenbone.net/community/vulnerability-tests
  pullPolicy: Always
  tag: "community"

# Notus description json also known as feed
notusdata:
  # latest is the most current community feed.
  repository: registry.community.greenbone.net/community/notus-data
  pullPolicy: Always
  tag: "community"

# required by openvas and ospd
redis:
  repository: greenbone/redis-server
  pullPolicy: Always
  tag: "latest"

# When you have access to the enterprise feed add the credentials for the private repository here.
# Additionally change notus and vulnerabilitytests accordingly.
imagePullSecrets: []
nameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  # type: LoadBalancer
  port: 443

# enables routing.yaml
routing:
  enabled: true

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
