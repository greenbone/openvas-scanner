name: "Build Rust binaries"

on: [workflow_call]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            platform: linux/amd64
            dist: dist-amd64
          - arch: arm64
            platform: linux/arm64
            dist: dist-arm64
    steps:
      - uses: actions/checkout@v4

      - name: prepare buildx
        run: |
          docker buildx create --use --name ci-builder
          docker buildx inspect --bootstrap
          docker run --privileged --rm tonistiigi/binfmt --install all

      - name: build
        run: |
          docker buildx build \
            --pull \
            --target rs-binaries \
            --platform ${{ matrix.platform }} \
            -o type=local,dest=./${{ matrix.dist }} \
            -f .docker/prod.Dockerfile .
          mkdir -p assets/linux/${{ matrix.arch }}
          cp ./${{ matrix.dist }}/install/usr/local/bin/openvasd assets/linux/${{ matrix.arch }}/openvasd
          cp ./${{ matrix.dist }}/install/usr/local/bin/scannerctl assets/linux/${{ matrix.arch }}/scannerctl
          cp ./${{ matrix.dist }}/install/usr/local/bin/feed-verifier assets/linux/${{ matrix.arch }}/feed-verifier

      - name: upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: rs-binaries-${{ matrix.arch }}
          path: assets/linux/${{ matrix.arch }}/*
          retention-days: 1
